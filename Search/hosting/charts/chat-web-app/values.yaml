# Default values for chat-web-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: bhm7vnpxv6irqcr.azurecr.io/searchwebapp
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "20230608125731"

service:
  type: ClusterIP
  port: 80

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}

ingress:
  enabled: true
  protocol: #http | https (set by script)
  annotations:
    kubernetes.io/ingress.class: addon-http-application-routing
    ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
  - ms-openai-cosmosdb-chatbot.hatboysoftware.com
  tls:
  - secretName: tt-letsencrypt-prod

env:
  configmap:
    - name: CognitiveSearch__AdminKey
    - name: CognitiveSearch__Endpoint
    - name: CognitiveSearch__IndexName
    - name: CognitiveSearch__MaxVectorSearchResults
    - name: CosmosDb__Containers
    - name: CosmosDb__Database
    - name: CosmosDb__Endpoint
    - name: CosmosDb__Key
    - name: OpenAi__CompletionsDeployment
    - name: OpenAi__EmbeddingsDeployment
    - name: OpenAi__Endpoint
    - name: OpenAi__Key
    - name: OpenAi__MaxConversationBytes
  values:
    - name: ASPNETCORE_ENVIRONMENT
      value: Production

# cognitiveSearch:
#   adminKey: ''
#   endpoint: 'https://cog-search-vector.search.windows.net'
#   indexName: 'vector-index'
#   maxVectorSearchResults: 10
# cosmosDb:
#   containers: 'completions, customer, product'
#   database: 'database'
#   endpoint: 'https://bhm7vnpxv6irq-cosmos-nosql.documents.azure.com:443/'
#   key: '=='
# openAi:
#   completionsDeployment: 'completions'
#   embeddingsDeployment: 'embeddings'
#   endpoint: 'https://bhm7vnpxv6irq-openai.openai.azure.com/'
#   key: ''
#   maxConversationBytes: 2000
